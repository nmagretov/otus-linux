# -*- mode: ruby -*-
# vim: set ft=ruby :

home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  :otuslinux => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
	:disks => {
		:sata1 => {
			:dfile => home + '/VirtualBox VMs/sata1.vdi',
			:size => 250, # Megabytes
			:port => 1
		},
		:sata2 => {
            :dfile => home + '/VirtualBox VMs/sata2.vdi',
            :size => 250, # Megabytes
			:port => 2
		},
        :sata3 => {
            :dfile => home + '/VirtualBox VMs/sata3.vdi',
            :size => 250, # Megabytes
            :port => 3
        },
        :sata4 => {
            :dfile => home + '/VirtualBox VMs/sata4.vdi',
            :size => 250, # Megabytes
            :port => 4
        }

	}

		
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

        box.vm.network "private_network", ip: boxconfig[:ip_addr]

        box.vm.provider :virtualbox do |vb|
                vb.name = "hw01.otus"
                vb.customize ["modifyvm", :id, "--memory", "1024"]
                vb.customize ["modifyvm", :id, "--cpus", "10"]
                needsController = false
		boxconfig[:disks].each do |dname, dconf|
			    unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

		end
                if needsController == true
                    vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                    boxconfig[:disks].each do |dname, dconf|
                        vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                    end
                end
         end
 	box.vm.provision "shell", inline: <<-SHELL
                mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
                yum install -y mdadm smartmontools hdparm gdisk wget
                yum update
                yum install -y https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm
                yum --enablerepo elrepo-kernel install kernel-ml -y
                grub2-mkconfig -o /boot/grub2/grub.cfg
                grub2-set-default 0
                # VBoxGuestAdditions install
                curl https://download.virtualbox.org/virtualbox/6.1.6/VBoxGuestAdditions_6.1.6.iso -o /tmp/VBoxGuestAdditions_6.1.6.iso
                mount /tmp/VBoxGuestAdditions_6.1.6.iso /mnt -o loop
                /mnt/VBoxLinuxAdditions.run
                usermod -a -G vboxsf $USER
                # Building custom kernel
                yum groupinstall "Development Tools"
                yum install kernel-devel ncurses-devel openssl-devel bc
                wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.3.8.tar.xz
                tar -xvf linux-5.3.8.tar.xz -C /usr/src
                cd /usr/src/linux-5.3.8
                cp /boot/config-$(uname -r) .config
                make oldconfig
                make -j11 # where -j11 CPU threads options
                make -j11 modules_install install
                grub2-mkconfig -o /boot/grub2/grub.cfg
                grub2-set-default 1
                # Now we are booting into 5.3.8 kernel
        
        reboot

  	  SHELL

      end
  end
end

